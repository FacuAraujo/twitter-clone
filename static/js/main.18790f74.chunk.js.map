{"version":3,"sources":["assets/images/twitter-logo.svg","assets/images/google-logo.svg","firebase.js","session/api.js","components/Loader.js","components/PageLoading.js","session/components/LoginForm.js","session/components/GoogleSignIn.js","session/screens/Login.js","session/components/RegisterForm.js","session/screens/Register.js","session/screens/Auth.js","session/context.js","session/hooks.js","tweets/api.js","tweets/context.js","tweets/hooks.js","components/SendTweet.js","components/Header.js","components/Modal.js","components/DeleteModal.js","components/DeleteTweet.js","components/Like.js","components/Tweet.js","components/TweetsList.js","pages/Home.js","App.js","index.js"],"names":["module","exports","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","firestore","auth","providers","google","GoogleAuthProvider","signInGoogle","signInWithPopup","signInEmail","email","password","signInWithEmailAndPassword","createEmail","createUserWithEmailAndPassword","signOut","onChange","callback","onAuthStateChanged","getUser","currentUser","Loader","className","PageLoading","LoginForm","useState","error","setError","isLoading","setIsLoading","data","setData","Fragment","onSubmit","e","preventDefault","then","result","catch","code","input","message","console","log","htmlFor","type","name","id","target","value","disabled","GoogleSignIn","text","onClick","src","GoogleLogo","alt","Login","TwitterLogo","to","RegisterForm","createAcc","userName","history","useHistory","user","updateProfile","displayName","photoURL","sendEmailVerification","push","Register","Auth","signIn","status","basename","exact","path","SessionContext","React","createContext","SessionProvider","children","setUser","setStatus","useEffect","state","actions","Provider","useUser","useContext","tweet","collection","add","doc","delete","tweetId","uid","update","likes","FieldValue","arrayUnion","arrayRemove","onSnapshot","snapshot","docs","map","TweetContext","TweetProvider","tweets","setTweets","api","date","remove","addLike","removeLike","useTweets","SendTweet","setTweet","enableChar","setEnableChar","Date","getTime","placeholder","length","Header","imageURL","Modal","isOpen","onClose","ReactDOM","createPortal","document","getElementById","DeleteTweetModal","props","onDeleteTweet","DeleteTweet","handleDeleteTweet","modalIsOpen","setModalIsOpen","handleModal","xmlns","viewBox","d","DeleteModal","Like","isLike","setLike","userLike","includes","Tweet","avatar","userTweet","actualDate","difDatesSeconds","Math","round","tweetDate","TweetsList","tweetsOrder","sort","a","b","key","Home","App","render","StrictMode"],"mappings":"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","file":"static/js/main.18790f74.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/twitter-logo.672fae97.svg\";","module.exports = __webpack_public_path__ + \"static/media/google-logo.3ec228d3.svg\";","import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\n\r\nfirebase.initializeApp({\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID\r\n});\r\n\r\nconst database = firebase.firestore();\r\nconst auth = firebase.auth();\r\nconst providers = {\r\n  google: new firebase.auth.GoogleAuthProvider()\r\n};\r\n\r\nexport { auth, providers, database };\r\nexport default firebase;\r\n","import { auth, providers } from '../firebase';\r\n\r\n// prettier-ignore\r\nexport default {\r\n  signInGoogle: () => auth.signInWithPopup(providers.google),\r\n  signInEmail: (email, password) => auth.signInWithEmailAndPassword(email, password),\r\n  createEmail: (email, password) => auth.createUserWithEmailAndPassword(email, password),\r\n  signOut: () => auth.signOut(),\r\n  onChange: callback => auth.onAuthStateChanged(callback),\r\n  getUser: () => auth.currentUser\r\n};\r\n","import React from 'react';\r\n\r\nimport './styles/Loader.scss';\r\n\r\nconst Loader = () => <div className=\"circle\"></div>;\r\n\r\nexport default Loader;\r\n","import React from 'react';\r\n\r\nimport './styles/PageLoading.scss';\r\n\r\nimport Loader from './Loader';\r\n\r\nconst PageLoading = () => (\r\n  <div className=\"PageLoading\">\r\n    <Loader />\r\n  </div>\r\n);\r\n\r\nexport default PageLoading;\r\n","import React, { useState } from 'react';\r\n\r\nimport './styles/LoginForm.scss';\r\nimport Loader from '../../components/Loader';\r\n\r\nconst LoginForm = ({ signInEmail }) => {\r\n  const [error, setError] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [data, setData] = useState({\r\n    email: '',\r\n    password: ''\r\n  });\r\n\r\n  const authAccount = e => {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n\r\n    signInEmail(email, password)\r\n      .then(result => {\r\n        setIsLoading(false);\r\n      })\r\n      .catch(error => {\r\n        if (error.code === 'auth/invalid-email') {\r\n          setError({\r\n            input: 'email',\r\n            code: error.code,\r\n            message: 'Introduce un correo electrónico válido'\r\n          });\r\n        } else if (error.code === 'auth/user-disabled') {\r\n          setError({\r\n            input: 'email',\r\n            code: error.code,\r\n            message: 'Tu usuario ha sido desabilitado'\r\n          });\r\n        } else if (error.code === 'auth/user-not-found') {\r\n          setError({\r\n            input: 'email',\r\n            code: error.code,\r\n            message: 'No existe un usuario con ese correo'\r\n          });\r\n        } else if (error.code === 'auth/wrong-password') {\r\n          setError({\r\n            input: 'password',\r\n            code: error.code,\r\n            message: 'La contraseña es incorrecta'\r\n          });\r\n        } else {\r\n          console.log(error.code, error.message);\r\n        }\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  const { email, password } = data;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <form onSubmit={authAccount}>\r\n        <div\r\n          className={\r\n            error.input === 'email'\r\n              ? 'form-group Login-Form-Group Error'\r\n              : 'form-group Login-Form-Group'\r\n          }\r\n        >\r\n          <label htmlFor=\"email\" className=\"Login-Label\">\r\n            Correo\r\n          </label>\r\n          <input\r\n            className=\"form-control Login-Input\"\r\n            type=\"email\"\r\n            name=\"email\"\r\n            id=\"email\"\r\n            onChange={e => setData({ ...data, email: e.target.value })}\r\n            value={email}\r\n          />\r\n          {error.input === 'email' && (\r\n            <small className=\"Error-Message\">{error.message}</small>\r\n          )}\r\n        </div>\r\n        <div\r\n          className={\r\n            error.input === 'password'\r\n              ? 'form-group Login-Form-Group Error'\r\n              : 'form-group Login-Form-Group'\r\n          }\r\n        >\r\n          <label htmlFor=\"password\" className=\"Login-Label\">\r\n            Contraseña\r\n          </label>\r\n          <input\r\n            className=\"form-control Login-Input\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            id=\"password\"\r\n            onChange={e => setData({ ...data, password: e.target.value })}\r\n            value={password}\r\n          />\r\n          {error.input === 'password' && (\r\n            <small className=\"Error-Message\">{error.message}</small>\r\n          )}\r\n        </div>\r\n        <button\r\n          className=\"btn btn-primary btn-block Login-Btn\"\r\n          disabled={email && password ? false : true}\r\n        >\r\n          {isLoading ? <Loader /> : 'Iniciar sesión'}\r\n        </button>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React from 'react';\r\n\r\nimport GoogleLogo from '../../assets/images/google-logo.svg';\r\nimport './styles/GoogleSignIn.scss';\r\n\r\nconst GoogleSignIn = ({ signInGoogle, text }) => {\r\n  return (\r\n    <button onClick={signInGoogle} className=\"Google-Btn\">\r\n      <img src={GoogleLogo} alt=\"Google logo\" /> {text}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default GoogleSignIn;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './styles/Login.scss';\r\n\r\nimport LoginForm from '../components/LoginForm';\r\nimport TwitterLogo from '../../assets/images/twitter-logo.svg';\r\nimport GoogleSignIn from '../components/GoogleSignIn';\r\n\r\nconst Login = ({ signInGoogle, signInEmail }) => (\r\n  <section className=\"Login-Container\">\r\n    <img src={TwitterLogo} alt=\"twitter logo\" className=\"Twitter-Logo\" />\r\n    <h1 className=\"Login-Header\">Iniciar sesión en TwitterClone</h1>\r\n    <LoginForm signInEmail={signInEmail} />\r\n    <GoogleSignIn\r\n      signInGoogle={signInGoogle}\r\n      text=\"Iniciar sesión con Google\"\r\n    />\r\n    <Link to=\"/register\" className=\"primary Login-Link\">\r\n      ¿Aún no tenes cuenta? Regístrate en TwitterClone\r\n    </Link>\r\n  </section>\r\n);\r\n\r\nexport default Login;\r\n","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nimport './styles/RegisterForm.scss';\r\nimport Loader from '../../components/Loader';\r\n\r\nconst RegisterForm = ({ createAcc }) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n  const [data, setData] = useState({\r\n    email: '',\r\n    password: '',\r\n    userName: '',\r\n  });\r\n\r\n  const { email, password, userName } = data;\r\n  const history = useHistory();\r\n\r\n  const createAccount = (e) => {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n\r\n    createAcc(email, password)\r\n      .then(({ user }) => {\r\n        user\r\n          .updateProfile({\r\n            displayName: userName,\r\n            photoURL:\r\n              'https://www.eleganciadospuntocero.com/wp-content/uploads/2013/03/Huevo-twitter-avatar.jpg',\r\n          })\r\n          .then(() => {\r\n            user\r\n              .sendEmailVerification()\r\n              .catch((error) => console.log(error.message));\r\n\r\n            history.push('/');\r\n            setIsLoading(false);\r\n          });\r\n      })\r\n      .catch((error) => {\r\n        if (error.code === 'auth/invalid-email') {\r\n          setError({\r\n            input: 'email',\r\n            code: error.code,\r\n            message: 'Introduce un correo electrónico válido',\r\n          });\r\n        } else if (error.code === 'auth/email-already-in-use') {\r\n          setError({\r\n            input: 'email',\r\n            code: error.code,\r\n            message: 'El correo ingresado ya esta en uso',\r\n          });\r\n        } else if (error.code === 'auth/weak-password') {\r\n          setError({\r\n            input: 'password',\r\n            code: error.code,\r\n            message: 'La contraseña debe tener al menos 6 caracteres',\r\n          });\r\n        } else {\r\n          console.log(error.code, error.message);\r\n        }\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <form onSubmit={createAccount}>\r\n        <div className=\"form-group Register-Form-Group\">\r\n          <label htmlFor=\"userName\" className=\"Register-Label\">\r\n            Usuario\r\n          </label>\r\n          <input\r\n            className=\"form-control Register-Input\"\r\n            type=\"text\"\r\n            name=\"userName\"\r\n            id=\"userName\"\r\n            onChange={(e) => setData({ ...data, userName: e.target.value })}\r\n            value={userName}\r\n          />\r\n        </div>\r\n        <div\r\n          className={\r\n            error.input === 'email'\r\n              ? 'form-group Register-Form-Group Error'\r\n              : 'form-group Register-Form-Group'\r\n          }\r\n        >\r\n          <label htmlFor=\"email\" className=\"Register-Label\">\r\n            Correo\r\n          </label>\r\n          <input\r\n            className=\"form-control Register-Input\"\r\n            type=\"email\"\r\n            name=\"email\"\r\n            id=\"email\"\r\n            onChange={(e) => setData({ ...data, email: e.target.value })}\r\n            value={email}\r\n          />\r\n          {error.input === 'email' && (\r\n            <small className=\"Error-Message\">{error.message}</small>\r\n          )}\r\n        </div>\r\n        <div\r\n          className={\r\n            error.input === 'password'\r\n              ? 'form-group Register-Form-Group Error'\r\n              : 'form-group Register-Form-Group'\r\n          }\r\n        >\r\n          <label htmlFor=\"password\" className=\"Register-Label\">\r\n            Contraseña\r\n          </label>\r\n          <input\r\n            className=\"form-control Register-Input\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            id=\"password\"\r\n            onChange={(e) => setData({ ...data, password: e.target.value })}\r\n            value={password}\r\n          />\r\n          {error.input === 'password' && (\r\n            <small className=\"Error-Message\">{error.message}</small>\r\n          )}\r\n        </div>\r\n        <button\r\n          type=\"submit\"\r\n          className=\"btn btn-primary btn-block Register-Btn\"\r\n          disabled={email && userName && password ? false : true}\r\n        >\r\n          {isLoading ? <Loader /> : 'Registrarse'}\r\n        </button>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './styles/Register.scss';\r\n\r\nimport RegisterForm from '../components/RegisterForm';\r\nimport TwitterLogo from '../../assets/images/twitter-logo.svg';\r\nimport GoogleSignIn from '../components/GoogleSignIn';\r\n\r\nconst Register = ({ createAcc, signInGoogle }) => (\r\n  <section className=\"Register-Container\">\r\n    <img src={TwitterLogo} alt=\"twitter logo\" className=\"Twitter-Logo\" />\r\n    <h1 className=\"Register-Header\">Registrarse en TwitterClone</h1>\r\n    <RegisterForm createAcc={createAcc} />\r\n    <GoogleSignIn signInGoogle={signInGoogle} text=\"Registrate con Google\" />\r\n    <Link to=\"/\" className=\"primary Register-Link\">\r\n      ¿Ya tienes una cuenta? Inicia sesión en TwitterClone\r\n    </Link>\r\n  </section>\r\n);\r\n\r\nexport default Register;\r\n","import React from 'react';\r\nimport { HashRouter, Switch, Route } from 'react-router-dom';\r\n\r\nimport PageLoading from '../../components/PageLoading';\r\nimport Login from './Login';\r\nimport Register from './Register';\r\n\r\nconst Auth = ({ signIn, createAcc, status }) => (\r\n  <div>\r\n    {status === 'init' && <PageLoading />}\r\n    {status === 'restored' && (\r\n      <HashRouter basename=\"/\">\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Login signInGoogle={signIn.google} signInEmail={signIn.email} />\r\n          </Route>\r\n          <Route exact path=\"/register\">\r\n            <Register createAcc={createAcc} signInGoogle={signIn.google} />\r\n          </Route>\r\n        </Switch>\r\n      </HashRouter>\r\n    )}\r\n  </div>\r\n);\r\n\r\nexport default Auth;\r\n","import React, { useEffect } from 'react';\r\n\r\nimport auth from './api';\r\nimport Auth from './screens/Auth';\r\n\r\nconst SessionContext = React.createContext(null);\r\n\r\nconst SessionProvider = ({ children }) => {\r\n  const [user, setUser] = React.useState(null);\r\n  const [status, setStatus] = React.useState('init');\r\n\r\n  useEffect(() => {\r\n    auth.onChange(user => {\r\n      setUser(user);\r\n      setStatus('restored');\r\n    });\r\n  }, []);\r\n\r\n  const state = { user };\r\n\r\n  const actions = {\r\n    signOut: auth.signOut,\r\n    signIn: { google: auth.signInGoogle, email: auth.signInEmail },\r\n    createAcc: auth.createEmail\r\n  };\r\n\r\n  if (!user)\r\n    return (\r\n      <Auth\r\n        signIn={actions.signIn}\r\n        createAcc={actions.createAcc}\r\n        status={status}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <SessionContext.Provider value={{ state, actions }}>\r\n      {children}\r\n    </SessionContext.Provider>\r\n  );\r\n};\r\n\r\nexport { SessionProvider as Provider, SessionContext as default };\r\n","import React from 'react';\r\n\r\nimport SessionContext from './context';\r\n\r\nexport const useUser = () => {\r\n  const {\r\n    state: { user }\r\n  } = React.useContext(SessionContext);\r\n\r\n  return user;\r\n};\r\n","import firebase, { database } from '../firebase';\r\n\r\nexport default {\r\n  add: (tweet) => database.collection('tweets').add(tweet),\r\n  remove: (id) => database.collection('tweets').doc(id).delete(),\r\n  addLike: (tweetId, uid) =>\r\n    database\r\n      .collection('tweets')\r\n      .doc(tweetId)\r\n      .update({ likes: firebase.firestore.FieldValue.arrayUnion(uid) }),\r\n  removeLike: (tweetId, uid) =>\r\n    database\r\n      .collection('tweets')\r\n      .doc(tweetId)\r\n      .update({ likes: firebase.firestore.FieldValue.arrayRemove(uid) }),\r\n  onChange: (callback) =>\r\n    database\r\n      .collection('tweets')\r\n      .onSnapshot((snapshot) =>\r\n        callback(snapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() })))\r\n      ),\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport { useUser } from '../session/hooks';\r\n\r\nimport api from './api';\r\nimport PageLoading from '../components/PageLoading';\r\n\r\nconst TweetContext = React.createContext({});\r\n\r\nconst TweetProvider = ({ children }) => {\r\n  const user = useUser();\r\n  const [tweets, setTweets] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const add = (text, date) => {\r\n    const { uid, displayName, photoURL } = user;\r\n    const likes = [];\r\n    api.add({ text, date, uid, displayName, photoURL, likes });\r\n  };\r\n\r\n  const remove = (id) => {\r\n    api.remove(id);\r\n  };\r\n\r\n  const addLike = (tweetId) => {\r\n    const { uid } = user;\r\n    api.addLike(tweetId, uid);\r\n  };\r\n\r\n  const removeLike = (tweetId) => {\r\n    const { uid } = user;\r\n    api.removeLike(tweetId, uid);\r\n  };\r\n\r\n  useEffect(() => {\r\n    api.onChange((tweets) => {\r\n      setTweets(tweets);\r\n\r\n      setIsLoading(false);\r\n    });\r\n\r\n    return () => setIsLoading(true);\r\n  }, [user.uid]);\r\n\r\n  if (isLoading) return <PageLoading />;\r\n\r\n  const state = { tweets };\r\n  const actions = { add, remove, addLike, removeLike };\r\n\r\n  return (\r\n    <TweetContext.Provider value={{ state, actions }}>\r\n      {children}\r\n    </TweetContext.Provider>\r\n  );\r\n};\r\n\r\nexport { TweetProvider as Provider, TweetContext as default };\r\n","import React from 'react';\r\n\r\nimport TweetContext from './context';\r\n\r\nexport function useTweets() {\r\n  const {\r\n    state: { tweets },\r\n    actions: { add, remove, addLike, removeLike },\r\n  } = React.useContext(TweetContext);\r\n\r\n  return [\r\n    tweets.map((tweet) => ({\r\n      ...tweet,\r\n      remove: () => remove(tweet.id),\r\n      removeLike: () => removeLike(tweet.id),\r\n      addLike: () => addLike(tweet.id),\r\n    })),\r\n    add,\r\n  ];\r\n}\r\n","import React, { useState } from 'react';\r\n\r\nimport { useTweets } from '../tweets/hooks';\r\n\r\nimport './styles/SendTweet.scss';\r\n\r\nconst SendTweet = () => {\r\n  const [tweet, setTweet] = useState('');\r\n  const [enableChar, setEnableChar] = useState(144);\r\n  // eslint-disable-next-line\r\n  const [tweets, add] = useTweets();\r\n\r\n  const handleChange = (e) => {\r\n    if (tweet.length < 144) {\r\n      setTweet(e.target.value);\r\n      setEnableChar(143 - tweet.length);\r\n    }\r\n    return null;\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const date = new Date();\r\n    add(tweet, date.getTime());\r\n    setTweet('');\r\n  };\r\n\r\n  return (\r\n    <div className=\"Input-Container\">\r\n      <form onSubmit={onSubmit}>\r\n        <div className=\"w-100\">\r\n          <textarea\r\n            type=\"text\"\r\n            className=\"form-control mr-4 Tweet-Area\"\r\n            placeholder=\"¿Qué está pasando?\"\r\n            onChange={handleChange}\r\n            value={tweet}\r\n          />\r\n          {tweet && (\r\n            <small className=\"text-secondary\">\r\n              Te quedan {enableChar} caracteres\r\n            </small>\r\n          )}\r\n        </div>\r\n        <button\r\n          className=\"btn btn-primary Tweet-btn\"\r\n          disabled={tweet ? false : true}\r\n          type=\"submit\"\r\n        >\r\n          Twittear\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SendTweet;\r\n","import React from 'react';\r\n\r\nimport auth from '../session/api';\r\n\r\nimport './styles/Header.scss';\r\nimport SendTweet from './SendTweet';\r\n\r\nconst Header = ({ imageURL, name }) => {\r\n  return (\r\n    <header>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"Header-Avatar\">\r\n            {imageURL ? <img src={imageURL} alt=\"avatar\" /> : null}\r\n          </div>\r\n          <div className=\"col\">\r\n            <h1 className=\"User-Name\">\r\n              {name}{' '}\r\n              <span className=\"LogOut\" onClick={() => auth.signOut()}>\r\n                Cerrar sesión\r\n              </span>\r\n            </h1>\r\n            <SendTweet />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './styles/Modal.scss';\r\n\r\nconst Modal = ({ isOpen, children, onClose }) => {\r\n  if (!isOpen) {\r\n    return null;\r\n  }\r\n\r\n  return ReactDOM.createPortal(\r\n    <div className=\"Modal\" onClick={onClose}>\r\n      <div className=\"Modal__container\">{children}</div>\r\n    </div>,\r\n    document.getElementById('modal')\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React from 'react';\r\n\r\nimport Modal from './Modal';\r\n\r\nconst DeleteTweetModal = props => {\r\n  return (\r\n    <Modal isOpen={props.isOpen} onClose={props.onClose}>\r\n      <div className=\"DeleteBadgeModal\">\r\n        <h1>¿Estás seguro?</h1>\r\n        <p>Estas a punto de eliminar este tweet</p>\r\n\r\n        <div>\r\n          <button onClick={props.onDeleteTweet} className=\"btn btn-danger mr-4\">\r\n            Eliminar\r\n          </button>\r\n          <button onClick={props.onClose} className=\"btn btn-primary\">\r\n            Cancelar\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default DeleteTweetModal;\r\n","import React, { useState } from 'react';\r\n\r\nimport DeleteModal from './DeleteModal';\r\n\r\nconst DeleteTweet = ({ handleDeleteTweet }) => {\r\n  const [modalIsOpen, setModalIsOpen] = useState(false);\r\n\r\n  const handleModal = () => {\r\n    setModalIsOpen(modalIsOpen ? false : true);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <svg\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        viewBox=\"0 0 24 24\"\r\n        className=\"Delete-Svg\"\r\n        onClick={() => handleModal()}\r\n      >\r\n        <path d=\"M 10 2 L 9 3 L 4 3 L 4 5 L 5 5 L 5 20 C 5 20.522222 5.1913289 21.05461 5.5683594 21.431641 C 5.9453899 21.808671 6.4777778 22 7 22 L 17 22 C 17.522222 22 18.05461 21.808671 18.431641 21.431641 C 18.808671 21.05461 19 20.522222 19 20 L 19 5 L 20 5 L 20 3 L 15 3 L 14 2 L 10 2 z M 7 5 L 17 5 L 17 20 L 7 20 L 7 5 z M 9 7 L 9 18 L 11 18 L 11 7 L 9 7 z M 13 7 L 13 18 L 15 18 L 15 7 L 13 7 z\" />\r\n      </svg>\r\n      <DeleteModal\r\n        isOpen={modalIsOpen}\r\n        onClose={handleModal}\r\n        onDeleteTweet={handleDeleteTweet}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeleteTweet;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport { useUser } from '../session/hooks';\r\n\r\nimport './styles/Like.scss';\r\n\r\nconst Like = ({ likes, addLike, removeLike }) => {\r\n  const user = useUser();\r\n  const [isLike, setLike] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const userLike = likes.includes(user.uid);\r\n    setLike(userLike);\r\n  }, [likes, user.uid]);\r\n\r\n  const handleClick = () => {\r\n    setLike(!isLike);\r\n    isLike ? removeLike() : addLike();\r\n  };\r\n\r\n  return (\r\n    <div className={`Likes-Container ${isLike ? 'text-red' : ''}`}>\r\n      <div\r\n        className={`button fav ${isLike ? 'is-liked' : ''}`}\r\n        id=\"fav\"\r\n        onClick={handleClick}\r\n      ></div>\r\n      {likes.length}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Like;\r\n","import React from 'react';\r\n\r\nimport DeleteTweet from './DeleteTweet';\r\nimport Like from './Like';\r\n\r\nimport './styles/Tweet.scss';\r\n\r\nconst Tweet = ({\r\n  text,\r\n  remove,\r\n  date,\r\n  userName,\r\n  avatar,\r\n  userTweet,\r\n  likes,\r\n  removeLike,\r\n  addLike,\r\n}) => {\r\n  const tweetDate = (date) => {\r\n    const actualDate = new Date();\r\n    const difDatesSeconds = Math.round((actualDate - date) / 1000);\r\n\r\n    if (difDatesSeconds < 59) {\r\n      return `${difDatesSeconds}s`;\r\n    } else if (difDatesSeconds / 60 < 59) {\r\n      return `${Math.round(difDatesSeconds / 60)}min`;\r\n    } else if (difDatesSeconds / 60 / 60 < 24) {\r\n      return `${Math.round(difDatesSeconds / 60 / 60)}h`;\r\n    } else {\r\n      return `Hace ${Math.round(difDatesSeconds / 60 / 60 / 24)} días`;\r\n    }\r\n  };\r\n\r\n  const handleDeleteTweet = () => {\r\n    remove();\r\n  };\r\n\r\n  return (\r\n    <div className=\"Tweet-Container\">\r\n      <div className=\"Tweet-Avatar\">\r\n        <img src={avatar} alt=\"avatar\" />\r\n      </div>\r\n      <div className=\"col Tweet-Content\">\r\n        <div className=\"Tweet-Header\">\r\n          {userName}\r\n          <span className=\"Tweet-Info\">• {tweetDate(date)}</span>\r\n        </div>\r\n        {text}\r\n      </div>\r\n\r\n      <div className=\"Tweet-Actions\">\r\n        {userTweet && <DeleteTweet handleDeleteTweet={handleDeleteTweet} />}\r\n        <Like addLike={addLike} removeLike={removeLike} likes={likes} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tweet;\r\n","import React from 'react';\r\n\r\nimport { useTweets } from '../tweets/hooks';\r\nimport { useUser } from '../session/hooks';\r\nimport PageLoading from './PageLoading';\r\nimport Tweet from './Tweet';\r\n\r\nconst TweetsList = () => {\r\n  const [tweets] = useTweets();\r\n  const user = useUser();\r\n\r\n  const sortArray = (array, value) => {\r\n    return array.sort((a, b) => {\r\n      return b[value] - a[value];\r\n    });\r\n  };\r\n\r\n  const tweetsOrder = sortArray(tweets, 'date');\r\n\r\n  if (tweets.length === 0) return <PageLoading />;\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"TweetsList-Container\">\r\n        {tweetsOrder.map(\r\n          ({\r\n            id,\r\n            text,\r\n            date,\r\n            displayName,\r\n            photoURL,\r\n            uid,\r\n            remove,\r\n            addLike,\r\n            removeLike,\r\n            likes,\r\n          }) => (\r\n            <Tweet\r\n              key={id}\r\n              id={id}\r\n              text={text}\r\n              remove={remove}\r\n              uid={uid}\r\n              date={date}\r\n              userName={displayName}\r\n              avatar={photoURL}\r\n              userTweet={user.uid === uid}\r\n              addLike={addLike}\r\n              removeLike={removeLike}\r\n              likes={likes}\r\n            />\r\n          )\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TweetsList;\r\n","import React from 'react';\r\n\r\nimport Header from '../components/Header';\r\nimport TweetsList from '../components/TweetsList';\r\n\r\nimport { useUser } from '../session/hooks';\r\n\r\nconst Home = () => {\r\n  const user = useUser();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Header imageURL={user.photoURL} name={user.displayName} />\r\n      <TweetsList />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\n\r\nimport Home from './pages/Home';\r\n\r\nconst App = () => <Home />;\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport App from './App';\n\nimport { Provider as SessionProvider } from './session/context';\nimport { Provider as TweetProvider } from './tweets/context';\n\nimport './global.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <SessionProvider>\n      <TweetProvider>\n        <App />\n      </TweetProvider>\n    </SessionProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}